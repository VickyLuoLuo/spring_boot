<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quark.data.rapid.server.mapper.WorkflowNodeMapper">
  <resultMap id="BaseResultMap" type="com.quark.data.rapid.server.model.WorkflowNode">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="data_stream_workflow_id" jdbcType="BIGINT" property="dataStreamWorkflowId" />
    <result column="data_stream_node_template_id" jdbcType="BIGINT" property="dataStreamNodeTemplateId" />
    <result column="workflow_node_name" jdbcType="VARCHAR" property="workflowNodeName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.quark.data.rapid.server.model.WorkflowNodeWithBLOBs">
    <result column="workflow_node_json_value" jdbcType="LONGVARCHAR" property="workflowNodeJsonValue" />
    <result column="workflow_node_json_metadata" jdbcType="LONGVARCHAR" property="workflowNodeJsonMetadata" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, data_stream_workflow_id, data_stream_node_template_id, workflow_node_name, create_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List">
    workflow_node_json_value, workflow_node_json_metadata
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.quark.data.rapid.server.model.WorkflowNodeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from data_stream_workflow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.quark.data.rapid.server.model.WorkflowNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_stream_workflow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from data_stream_workflow_node
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from data_stream_workflow_node
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.quark.data.rapid.server.model.WorkflowNodeExample">
    delete from data_stream_workflow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.quark.data.rapid.server.model.WorkflowNodeWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_stream_workflow_node (data_stream_workflow_id, data_stream_node_template_id, 
      workflow_node_name, create_time, update_time, 
      workflow_node_json_value, workflow_node_json_metadata
      )
    values (#{dataStreamWorkflowId,jdbcType=BIGINT}, #{dataStreamNodeTemplateId,jdbcType=BIGINT}, 
      #{workflowNodeName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{workflowNodeJsonValue,jdbcType=LONGVARCHAR}, #{workflowNodeJsonMetadata,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quark.data.rapid.server.model.WorkflowNodeWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_stream_workflow_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dataStreamWorkflowId != null">
        data_stream_workflow_id,
      </if>
      <if test="dataStreamNodeTemplateId != null">
        data_stream_node_template_id,
      </if>
      <if test="workflowNodeName != null">
        workflow_node_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="workflowNodeJsonValue != null">
        workflow_node_json_value,
      </if>
      <if test="workflowNodeJsonMetadata != null">
        workflow_node_json_metadata,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dataStreamWorkflowId != null">
        #{dataStreamWorkflowId,jdbcType=BIGINT},
      </if>
      <if test="dataStreamNodeTemplateId != null">
        #{dataStreamNodeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="workflowNodeName != null">
        #{workflowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workflowNodeJsonValue != null">
        #{workflowNodeJsonValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="workflowNodeJsonMetadata != null">
        #{workflowNodeJsonMetadata,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.quark.data.rapid.server.model.WorkflowNodeExample" resultType="java.lang.Long">
    select count(*) from data_stream_workflow_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update data_stream_workflow_node
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dataStreamWorkflowId != null">
        data_stream_workflow_id = #{record.dataStreamWorkflowId,jdbcType=BIGINT},
      </if>
      <if test="record.dataStreamNodeTemplateId != null">
        data_stream_node_template_id = #{record.dataStreamNodeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.workflowNodeName != null">
        workflow_node_name = #{record.workflowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.workflowNodeJsonValue != null">
        workflow_node_json_value = #{record.workflowNodeJsonValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.workflowNodeJsonMetadata != null">
        workflow_node_json_metadata = #{record.workflowNodeJsonMetadata,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update data_stream_workflow_node
    set id = #{record.id,jdbcType=BIGINT},
      data_stream_workflow_id = #{record.dataStreamWorkflowId,jdbcType=BIGINT},
      data_stream_node_template_id = #{record.dataStreamNodeTemplateId,jdbcType=BIGINT},
      workflow_node_name = #{record.workflowNodeName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      workflow_node_json_value = #{record.workflowNodeJsonValue,jdbcType=LONGVARCHAR},
      workflow_node_json_metadata = #{record.workflowNodeJsonMetadata,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update data_stream_workflow_node
    set id = #{record.id,jdbcType=BIGINT},
      data_stream_workflow_id = #{record.dataStreamWorkflowId,jdbcType=BIGINT},
      data_stream_node_template_id = #{record.dataStreamNodeTemplateId,jdbcType=BIGINT},
      workflow_node_name = #{record.workflowNodeName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.quark.data.rapid.server.model.WorkflowNodeWithBLOBs">
    update data_stream_workflow_node
    <set>
      <if test="dataStreamWorkflowId != null">
        data_stream_workflow_id = #{dataStreamWorkflowId,jdbcType=BIGINT},
      </if>
      <if test="dataStreamNodeTemplateId != null">
        data_stream_node_template_id = #{dataStreamNodeTemplateId,jdbcType=BIGINT},
      </if>
      <if test="workflowNodeName != null">
        workflow_node_name = #{workflowNodeName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="workflowNodeJsonValue != null">
        workflow_node_json_value = #{workflowNodeJsonValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="workflowNodeJsonMetadata != null">
        workflow_node_json_metadata = #{workflowNodeJsonMetadata,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.quark.data.rapid.server.model.WorkflowNodeWithBLOBs">
    update data_stream_workflow_node
    set data_stream_workflow_id = #{dataStreamWorkflowId,jdbcType=BIGINT},
      data_stream_node_template_id = #{dataStreamNodeTemplateId,jdbcType=BIGINT},
      workflow_node_name = #{workflowNodeName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      workflow_node_json_value = #{workflowNodeJsonValue,jdbcType=LONGVARCHAR},
      workflow_node_json_metadata = #{workflowNodeJsonMetadata,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quark.data.rapid.server.model.WorkflowNode">
    update data_stream_workflow_node
    set data_stream_workflow_id = #{dataStreamWorkflowId,jdbcType=BIGINT},
      data_stream_node_template_id = #{dataStreamNodeTemplateId,jdbcType=BIGINT},
      workflow_node_name = #{workflowNodeName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectForUpdate" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from data_stream_workflow_node
    where id = #{id,jdbcType=BIGINT} for update
  </select>
</mapper>